 <!-- this is a demo of the parent-child / container-transform transition using the GSAP library and its FLIP plugin. you can find the version of the used library in its url in the script tag. -->
<!-- FLIP plugin docs https://greensock.com/docs/v3/Plugins/Flip -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        *,
        *::before,
        *::after {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }

        html,
        body {
            height: 100%;
            line-height: 1.6;
            -webkit-font-smoothing: antialiased;
        }

        img,
        picture,
        video,
        canvas,
        svg {
            display: block;
            max-width: 100%;
        }

        input,
        button,
        textarea,
        select {
            font: inherit;
        }

        p,
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            overflow-wrap: break-word;
        }

        .details-page {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #f1f1f1;
            padding: 1rem;
            opacity: 0;
            pointer-events: none;
        }

        .details-page .before {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #f1f1f1;
        }

        .details-page.active {
            opacity: 1;
            pointer-events: all;
        }

        .details-page .h1-wrapper {
            display: flex;
            justify-content: center;
        }

        .details-page h1 {
            font-size: 2rem;
            margin-bottom: 1rem;
            width: fit-content;
        }

        .list-view {
            width: 100%;
            height: 100%;
            padding: 1rem;
            overflow-y: scroll;
        }

        .list-item {
            width: 100%;
            height: 100px;
            background-color: #f1f1f1;
            padding: 1rem;
            cursor: pointer;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .list-item h1 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .placeholder{
            margin-bottom: 1rem;
        }

        .list-item p {
            font-size: 1rem;
        }
    </style>
</head>

<body>
    <section class="details-page " data-flip-id="item">
        <div class="before"></div>
        <div class="h1-wrapper">
            <h1 data-flip-id="h1">Title</h1>
        </div>
        <p>description of the item</p>
    </section>
    <section class="list-view">
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">first item title</h1>
                <p>first item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">second item title</h1>
                <p>second item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">third item title</h1>
                <p>third item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">fourth item title</h1>
                <p>fourth item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">fifth item title</h1>
                <p>fifth item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">sixth item title</h1>
                <p>sixth item description</p>
            </div>
        </div>
        <div class="placeholder">
            <div class="list-item" data-flip-id="item">
                <h1 data-flip-id="h1">seventh item title</h1>
                <p>seventh item description</p>
            </div>
        </div>
    </section>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js" ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/Flip.min.js" ></script>
    <script>

      gsap.registerPlugin(Flip);
        const placeholders = document.querySelectorAll('.placeholder');
        const listItems = document.querySelectorAll('.list-item');
        const detailsPage = document.querySelector('.details-page');
        const detailsPageParagraph = detailsPage.querySelector('p');
        const detailsPageHeader = detailsPage.querySelector('h1');
        let currentListItem;

        placeholders.forEach((placeholder, index) => {
            placeholder.style.height = listItems[index].offsetHeight + 'px';
        });

        listItems.forEach((listItem) => {
            listItem.addEventListener('click', function () {
                currentListItem = listItem;
                const listItemState = Flip.getState(listItem);
                const listItemHeaderState = Flip.getState(listItem.querySelector('h1'), {
                    props: 'font-size,margin-bottom'
                });
                detailsPageHeader.textContent = listItem.querySelector('h1').textContent;
                detailsPageParagraph.textContent = listItem.querySelector('p').textContent;

                detailsPage.classList.toggle('active');

                Flip.from(listItemState, {
                    targets: detailsPage,
                    duration: 0.5,
                    ease: 'easeOut',
                });

                Flip.from(listItemHeaderState, {
                    targets: detailsPageHeader,
                    duration: 0.5,
                    ease: 'easeOut',
                });

                gsap.to('.before', { // I'm using the first div in the detailsPage as a ::before pseudo element, cause I couldn't get the pseudo element to work with Flip 
                    opacity: 0,
                    duration: 0.5,
                    ease: 'linear',
                })

            })
        });

        detailsPage.addEventListener('click', function () {
            const detailsPageState = Flip.getState(detailsPage);
            const headerState = Flip.getState(detailsPageHeader, {
                props: 'font-size,margin-bottom'
            });

            detailsPage.classList.toggle('active');

            Flip.from(detailsPageState, { // for some reason, the Flip.from() for the detailsPage should come before the Flip.from() for its header to work properly
                targets: currentListItem,
                duration: 0.5,
                ease: 'easeOut',
            });

            Flip.from(headerState, {
                targets: currentListItem.querySelector('h1'),
                duration: 0.5,
                ease: 'easeOut',
            });

            gsap.to('.before', {
                opacity: 1,
                ease: 'linear',
            })
        });

    </script>
</body>

</html>
