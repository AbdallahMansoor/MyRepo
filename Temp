# TODO: (pass optinal y to the annotatiion function), enable grid
# vertical annotation matplotlib
import matplotlib.pyplot as plt
import numpy as np

# Generate some data
x = np.linspace(0, 10, 100)
y = np.sin(x)

# Create a figure and axis
fig, ax = plt.subplots()

line, = ax.plot(x, y)

#it must be very accurate for "np.where" to find it, else you can use: np.argmin(np.abs(xdata - x_value))
x_value = 5.252525252525253
xdata, ydata = line.get_data()
index = np.where(xdata == x_value)[0]
y_value = ydata[index]
y_min, y_max = ax.dataLim.intervaly
line_height = 0.1 * (y_max - y_min)
# later, I can pass the line style and color to the function that draws the annotation
ax.plot([x_value, x_value], [y_value - line_height/2, y_value + line_height/2], '--', linewidth=2, color='r')

plt.show()
------------------------------------------------------------------------
# to ask Claude:
(I'm someone who intends to spot patterns algorithmically on some stocks, i have small finance, and I'm trying to understand the big picture or the scene of algorithmic trading, so help me write a reddit post to ask people. try to fill the gaps in my post. title: "[Novice] Seeking advice on how to approach simple.... with a tiny budget". body: "Hi everyone, 

I'm getting started and I'm trying to map out ...

As a study case, I have an assumption that certain stocks move in an upward cyclical motion in a bull market and the right point of entry is when the price flattens after a downturn.

So, I'm looking for the prevailing, cost-effective ways to ... strategy.

in an ideal world, I would have a real-time stream of 1-minute candles and a broker(stocks and forex) to execute my orders  ... all under 20$ a month.

I would be thankful if you could point out references or resources that can help me ... the space of algorithmic trading.")
